---
import Layout from "@/layouts/Layout.astro";
import Dropdown from "@/components/ui/Dropdown.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;

const menuItems = [
  { href: "/brain/dashboard", label: "Inicio", icon: "M3 12l2-2m0 0l7-7 7 7M13 5v6h6" },
  { href: "/brain/projects", label: "Proyectos", icon: "M9 17v-6h13v6M9 17H3v-6h6v6z" },
  { href: "/brain/profile", label: "Perfil", icon: "M6 20v-2a6 6 0 0112 0v2" },
  {
    dropdown: true,
    label: "Admin",
    icon: "M4 4h16v16H4z",
    items: [
      { href: "/brain/admin/users", label: "Usuarios" },
      { href: "/brain/admin/settings", label: "Ajustes" },
    ],
  },
];
---

<Layout title={title}>
  <div class="min-h-screen flex bg-background">
    <!-- Panel lateral con animación -->
    <aside
      id="sidebar"
      class="h-screen bg-gray-900 bg-opacity-80 flex flex-col pl-8 pr-6 items-center py-6 gap-8 border-r border-primary border-opacity-30 transition-all duration-300 group"
    >
      <nav class="flex flex-col gap-4 w-full">
        {
          menuItems.map((item) => (
            item.dropdown
              ? <Dropdown>
                  <span slot="label" class="flex items-center gap-2">
                    <svg class="h-7 w-7 text-primary aspect-square" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                      <path d={item.icon} />
                    </svg>
                    <span class="opacity-0 w-0 group-hover:opacity-100 group-hover:w-20 transition-all duration-300 text-white py-1 rounded shadow-lg pointer-events-none">{item.label}</span>
                  </span>
                  {
                    item.items.map(subItem => (
                      <a href={subItem.href} class="block px-4 py-2 text-white hover:bg-primary hover:text-gray-900 transition-colors">
                        {subItem.label}
                      </a>
                    ))
                  }
              </Dropdown>
              : (
                <a href={item.href} class="group gap-2 flex justify-start items-center">
                  <svg class="h-7 w-7 text-primary aspect-square" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path d={item.icon} />
                  </svg>
                  <span class="sidebar-label opacity-0 w-0 group-hover:opacity-100 group-hover:w-20 transition-all duration-300 text-white py-1 rounded shadow-lg pointer-events-none">
                    {item.label}
                  </span>
                </a>
              )
          ))
        }
      </nav>
    </aside>
    <!-- Contenido principal -->
    <div class="flex-1 flex flex-col">
      <!-- Navbar superior -->
      <header class="flex items-center justify-between px-8 py-4 bg-transparent w-full">
        <span class="font-oswald text-2xl text-primary">Brain JoelMH112</span>
        <div class="relative group" style="cursor:pointer;">
          <button
            id="user-menu-btn"
            class="flex items-center justify-center w-10 h-10 rounded-full bg-primary text-white font-oswald text-xl focus:outline-none"
          >
            <span id="user-initial">J</span>
          </button>
          <div
            id="user-menu"
            class="absolute right-0 pt-2 transition-all duration-200 opacity-0 pointer-events-none group-hover:opacity-100 group-hover:pointer-events-auto"
          >
            <div class="w-40 bg-gray-900 rounded shadow-lg py-2">
              <a href="/brain/profile" class="block px-4 py-2 text-white hover:bg-primary hover:text-gray-900 transition-colors">Mi perfil</a>
              <button id="logout-btn" class="block w-full text-left px-4 py-2 text-white hover:bg-red-600 hover:text-white transition-colors">
                Cerrar sesión
              </button>
            </div>
          </div>
        </div>
      </header>
      <slot/>
    </div>
  </div>
</Layout>
<script>
  // Obtener el usuario de localStorage y mostrar la inicial
  const user = JSON.parse(localStorage.getItem("user") || "{}");
  const initial = user.name ? user.name[0].toUpperCase() : user.email ? user.email[0].toUpperCase() : "U";
  const initialEl = document.getElementById("user-initial");
  if (initialEl) initialEl.textContent = initial;
  // El menú ahora se muestra solo con hover, no es necesario el click
  // Cerrar sesión
  const logoutBtn = document.getElementById("logout-btn");
  if (logoutBtn) {
    logoutBtn.addEventListener("click", async () => {
      localStorage.removeItem("user");
      await fetch("/api/logout", { method: "POST" });
      window.location.href = "/brain";
    });
  }
</script>
