---
import Button from "@/components/Button.astro";
import Card from "@/components/Card.astro";
import Link from "@/components/icons/Link.astro";
import Modal from "@/components/Modal.astro";
interface Project {
  id: number;
  title: string;
  description: string;
  longDescription: string;
  tags: string[];
  image: string;
  imageAlt: string;
  link?: string;
}

const projects: Project[] = [
  {
    id: 1,
    title: "Olyverse",
    description:
      "Olyverse es una plataforma de contenido digital desarrollada con NextJS y Laravel. Esta plataforma trae estrellas de distintos ámbitos como Álvaro Morte, Kerem Bürsin, entre otros, para que compartan sus conocimientos con la comunidad.",
    longDescription: `<p>Olyverse es una plataforma de contenido digital desarrollada con NextJS y Laravel. Esta plataforma trae estrellas de distintos ámbitos como Álvaro Morte, Kerem Bürsin, entre otros, para que compartan sus conocimientos con la comunidad.</p>
      <p>Este proyecto está formado de "4 partes":</p>
      <ul class="list-disc list-inside ml-2"><li>La plataforma web + "api web" desarrolladas con NextJS y Typescript.</li>
          <li>La api real desarrollada con Laravel.</li>
          <li>Un scheduler para ayudar a la api con segun que tareas, también desarrollado con Laravel.</li>
          <li>Un backoffice para que el cliente pueda gestionar el contenido y algunos flujos de la plataforma, desarrollado con Laravel.</li>       
        `,
    tags: ["Typescript", "NextJS", "Laravel"],
    image: "/images/olyverse.webp",
    imageAlt: "Imagen donde se ve la página de inicio de olyverse.com",
    link: "https://olyverse.com",
  },
  {
    id: 2,
    title: "Navegamenorca",
    description:
      "Navegamenorca es una plataforma para reservar excursiones en barca en la isla de Menorca. Esta plataforma fue desarrollada completamente con NextJS.",
    longDescription:
      "Navegamenorca es una plataforma para reservar excursiones en barca en la isla de Menorca. Esta plataforma fue desarrollada completamente con NextJS.",
    tags: ["Typescript", "NextJS", "TailwindCSS"],
    image: "/images/navegamenorca.webp",
    imageAlt: "Imagen donde se ve la página de inicio de navegamenorca.com",
    link: "https://navegamenorca.com",
  },
  {
    id: 3,
    title: "ERPs",
    description:
      "He desarrollado varios ERPs para distintas empresas. Estos ERPs han utilizado Laravel y alguna integración con ReactJS. Entre ellos destacan, una asociación hotelera y una inmobiliaria/alquiler vacacional.",
    longDescription:
      "He desarrollado varios ERPs para distintas empresas. Estos ERPs han utilizado Laravel y alguna integración con ReactJS. Entre ellos destacan, una asociación hotelera y una inmobiliaria/alquiler vacacional.",
    tags: ["Laravel", "ReactJS"],
    image: "/images/erp.webp",
    imageAlt: "Imagen donde se ve la página de inicio de un ERP",
  },
];
---

<section id="projects" class="">
  <div class="content flex flex-col gap-10">
    <h1 class="font-oswald text-4xl">Proyectos</h1>
    <div class="flex flex-col gap-6 lg:grid lg:grid-cols-[repeat(auto-fill,minmax(25rem,1fr))] lg:gap-10">
      {
        projects.map((project) => (
          <Card className={`flex flex-col gap-6 justify-between`}>
            <div class="flex flex-col gap-6">
              <header class="flex gap-4 w-full justify-between items-end flex-wrap">
                <h2 class="font-raleway font-semibold text-2xl lg:text-3xl">{project.title}</h2>
                <div class="flex gap-4">
                  <Button className="justify-self-end buttonProject" dataId={project.id}>
                    Ver más...
                  </Button>
                  {project.link && (
                    <a href={project.link} target="_blank" rel="noopener noreferrer" class="justify-self-end">
                      <Button className="group">
                        <Link className="h-6 w-6" colorClassName="text-primary group-hover:text-white transition:all duration-200" />
                      </Button>
                    </a>
                  )}
                </div>
              </header>
              <p class="text-gray-300 opacity-95">{project.description}</p>
            </div>
            <div class="flex flex-col gap-6 bottom-0">
              <div class="flex gap-2 flex-wrap">
                {project.link && <span class="text-green-500 bg-green-500 bg-opacity-20 p-2 rounded-md font-semibold">Online</span>}
                {project.tags.map((tag) => (
                  <span class="bg-gray-primary bg-primary bg-opacity-20 p-2 rounded-md font-semibold text-primary">{tag}</span>
                ))}
              </div>
              <img src={project.image} alt={project.imageAlt} class="w-full h-auto object-cover rounded-md" />
            </div>
          </Card>
        ))
      }
    </div>
    <Modal id="projectsModal" onClose="closeFunction()">
      <div id="modalContent" class="flex flex-col gap-4 max-h-[70dvh] overflow-auto"></div>
    </Modal>
  </div>
  <script define:vars={{ projects }}>
    const buttons = document.getElementsByClassName("buttonProject");
    const modal = document.getElementById("projectsModal");
    modal.addEventListener("close", (e) => {
      console.log("eventReceived");
      document.body.style.overflow = "auto";
      const modal = document.getElementById("projectsModal");
      modal.classList.remove("flex");
      modal.classList.add("hidden");
    });
    for (let i = 0; i < buttons.length; i++) {
      buttons[i].addEventListener("click", (e) => {
        const id = e.target.getAttribute("data-id");
        const project = projects.find((project) => {
          console.log(project.id == id);
          return project.id == id;
        });
        const modal = document.getElementById("projectsModal");
        const modalContent = document.getElementById("modalContent");
        document.body.style.overflow = "hidden";
        modalContent.innerHTML = `
          <h2 class="font-raleway font-semibold text-2xl lg:text-3xl">${project.title}</h2>
          <div class="text-gray-300 opacity-95 flex flex-col gap-2">${project.longDescription}</div>
          <div class="flex gap-2 flex-wrap">
            ${project.link ? `<a href="${project.link}" class="text-primary bg-primary bg-opacity-20 p-2 rounded-md font-semibold" target="_blank" rel="noopener noreferrer">Visitar</a>` : ``}
          </div>
          
        `;
        modal.classList.remove("hidden");
        modal.classList.add("flex");
      });
    }
  </script>
</section>
